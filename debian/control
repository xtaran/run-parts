Source: librun-parts-perl
Section: perl
Priority: optional
Maintainer: Axel Beckert <abe@debian.org>
Build-Depends: debhelper (>= 9),
               dh-dist-zilla,
               libdist-zilla-plugin-git-perl,
               libdist-zilla-plugin-githubmeta-perl,
               libdist-zilla-plugin-ourpkgversion-perl,
               libdist-zilla-plugin-podweaver-perl,
               libdist-zilla-plugin-test-kwalitee-perl,
               libdist-zilla-plugin-test-perl-critic-perl
Build-Depends-Indep: libexporter-easy-perl,
                     libfile-slurp-perl (>= 9999.17),
                     libtaint-util-perl,
                     libtest-differences-perl,
                     libtest-nowarnings-perl,
                     libtest-trap-perl,
                     libtest-warnings-perl (>= 0.005),
                     perl
Standards-Version: 4.5.1
Vcs-Browser: https://github.com/xtaran/run-parts
Vcs-Git: https://github.com/xtaran/run-parts.git
Homepage: https://metacpan.org/release/Run-Parts
Testsuite: autopkgtest-pkg-perl
Rules-Requires-Root: no

Package: librun-parts-perl
Architecture: all
Depends: libexporter-easy-perl,
         libfile-slurp-perl (>= 9999.17),
         libtaint-util-perl,
         ${misc:Depends},
         ${perl:Depends}
Description: Offers run-parts' functionality in Perl
 run-parts and hence Run::Parts runs all the executable files named
 within constraints described below, found in the given directory.
 Other files and directories are silently ignored.
 .
 Additionally they can just print the names of the all matching files
 (not limited to executables, but ignores blacklisted files like
 e.g. backup files), but don't actually run them.
 .
 Run::Parts contains two backend implementation. Run::Parts::Debian
 actually uses /bin/run-parts and Run::Parts::Perl is a pure Perl
 implementation of a basic set of run-parts' functionality.
 .
 On Debian Run::Parts uses Run::Parts::Debian by default. But you can
 also choose any of the backends explicitly.
